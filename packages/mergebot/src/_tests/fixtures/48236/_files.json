{
  "b4d71f672f0f204a514002348ebc2025d18866ca:types/woocommerce__woocommerce-rest-api/tsconfig.json": "{\n    \"compilerOptions\": {\n        \"module\": \"commonjs\",\n        \"lib\": [\n            \"es6\"\n        ],\n        \"noImplicitAny\": true,\n        \"noImplicitThis\": true,\n        \"strictFunctionTypes\": true,\n        \"strictNullChecks\": true,\n        \"baseUrl\": \"../\",\n        \"typeRoots\": [\n            \"../\"\n        ],\n        \"types\": [],\n        \"noEmit\": true,\n        \"forceConsistentCasingInFileNames\": true,\n        \"paths\": {\n            \"@woocommerce/*\": [\n                \"woocommerce__*\"\n            ]\n        }\n    },\n    \"files\": [\n        \"index.d.ts\",\n        \"woocommerce__woocommerce-rest-api-tests.ts\"\n    ]\n}\n",
  "master:types/woocommerce__woocommerce-rest-api/tsconfig.json": "{\n    \"compilerOptions\": {\n        \"module\": \"commonjs\",\n        \"lib\": [\n            \"es6\"\n        ],\n        \"noImplicitAny\": true,\n        \"noImplicitThis\": true,\n        \"strictFunctionTypes\": true,\n        \"strictNullChecks\": true,\n        \"baseUrl\": \"../\",\n        \"typeRoots\": [\n            \"../\"\n        ],\n        \"types\": [],\n        \"noEmit\": true,\n        \"forceConsistentCasingInFileNames\": true\n    },\n    \"files\": [\n        \"index.d.ts\",\n        \"woocommerce__woocommerce-rest-api-tests.ts\"\n    ]\n}\n",
  "master:types/woocommerce__woocommerce-rest-api/index.d.ts": "// Type definitions for @woocommerce/woocommerce-rest-api 1.0\n// Project: https://github.com/woocommerce/woocommerce-rest-api-js-lib\n// Definitions by: KaKa <https://github.com/climba03003>\n// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped\nexport type WooCommerceRestApiVersion = 'wc/v3' | 'wc/v2' | 'wc/v1' | 'wc-api/v3' | 'wc-api/v2' | 'wc-api/v1';\nexport type WooCommerceRestApiEncoding = 'utf-8' | 'ascii';\nexport type WooCommerceRestApiMethod = 'get' | 'post' | 'put' | 'delete' | 'options';\n\nexport interface WooCommerceRestApiOptions {\n    /* Your Store URL, example: http://woo.dev/ */\n    url: string;\n    /* Your API consumer key */\n    consumerKey: string;\n    /* Your API consumer secret */\n    consumerSecret: string;\n    /* Custom WP REST API URL prefix, used to support custom prefixes created with the `rest_url_prefix filter` */\n    wpAPIPrefix?: string;\n    /* API version, default is `v3` */\n    version?: WooCommerceRestApiVersion;\n    /* Encoding, default is 'utf-8' */\n    encoding?: WooCommerceRestApiEncoding;\n    /* When `true` and using under HTTPS force Basic Authentication as query string, default is `false` */\n    queryStringAuth?: boolean;\n    /* Provide support for URLs with ports, eg: `8080` */\n    port?: number;\n    /* Define the request timeout */\n    timeout?: number;\n    /* Define the custom Axios config, also override this library options */\n    axiosConfig?: any;\n}\n\nexport interface WooCommerceRestApiQuery {\n    [key: string]: string;\n}\n\n/**\n * WooCommerce REST API wrapper\n */\nexport default class WooCommerceRestApi {\n    classVersion: string;\n    url: string;\n    consumerKey: string;\n    consumerSecret: string;\n    wpAPIPrefix: string;\n    version: WooCommerceRestApiVersion;\n    encoding: WooCommerceRestApiEncoding;\n    queryStringAuth: boolean;\n    port: number;\n    timeout: number;\n    axiosConfig: any;\n\n    /**\n     * Class constructor.\n     */\n    constructor(opt: WooCommerceRestApiOptions | WooCommerceRestApi);\n\n    /**\n     * Set default options\n     */\n    _setDefaultsOptions(opt: WooCommerceRestApiOptions): void;\n\n    /**\n     * Parse params object.\n     */\n    _parseParamsObject(params: any, query: any): WooCommerceRestApiQuery;\n\n    /**\n     * Normalize query string for oAuth\n     */\n    _normalizeQueryString(url: string, params: any): string;\n\n    /**\n     * Get URL\n     */\n    _getUrl(endpoint: string, params: any): string;\n\n    /**\n     * Get OAuth\n     */\n    _getOAuth(): any;\n\n    /**\n     * Do requests\n     */\n    _request(method: WooCommerceRestApiMethod, endpoint: string, data: any, params: any): Promise<any>;\n\n    /**\n     * GET requests\n     */\n    get(endpoint: string, params?: any): Promise<any>;\n\n    /**\n     * POST requests\n     */\n    post(endpoint: string, data: any, params?: any): Promise<any>;\n\n    /**\n     * PUT requests\n     */\n    put(endpoint: string, data: any, params?: any): Promise<any>;\n\n    /**\n     * DELETE requests\n     */\n    delete(endpoint: string, params?: any): Promise<any>;\n\n    /**\n     * OPTIONS requests\n     */\n    options(endpoint: string, params?: any): Promise<any>;\n}\n\n/**\n * Options Exception.\n */\nexport class OptionsException {\n    name: 'Options Error';\n    message: string;\n\n    /**\n     * Constructor.\n     */\n    constructor(message: string);\n}\n",
  "b4d71f672f0f204a514002348ebc2025d18866ca:types/woocommerce__woocommerce-rest-api/index.d.ts": "// Type definitions for @woocommerce/woocommerce-rest-api 1.0\n// Project: https://github.com/woocommerce/woocommerce-rest-api-js-lib\n// Definitions by: KaKa <https://github.com/climba03003>\n// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped\nexport type WooCommerceRestApiVersion = 'wc/v3' | 'wc/v2' | 'wc/v1' | 'wc-api/v3' | 'wc-api/v2' | 'wc-api/v1';\nexport type WooCommerceRestApiEncoding = 'utf-8' | 'ascii';\nexport type WooCommerceRestApiMethod = 'get' | 'post' | 'put' | 'delete' | 'options';\n\nexport interface WooCommerceRestApiOptions {\n    /* Your Store URL, example: http://woo.dev/ */\n    url: string;\n    /* Your API consumer key */\n    consumerKey: string;\n    /* Your API consumer secret */\n    consumerSecret: string;\n    /* Custom WP REST API URL prefix, used to support custom prefixes created with the `rest_url_prefix filter` */\n    wpAPIPrefix?: string;\n    /* API version, default is `v3` */\n    version?: WooCommerceRestApiVersion;\n    /* Encoding, default is 'utf-8' */\n    encoding?: WooCommerceRestApiEncoding;\n    /* When `true` and using under HTTPS force Basic Authentication as query string, default is `false` */\n    queryStringAuth?: boolean;\n    /* Provide support for URLs with ports, eg: `8080` */\n    port?: number;\n    /* Define the request timeout */\n    timeout?: number;\n    /* Define the custom Axios config, also override this library options */\n    axiosConfig?: any;\n}\n\nexport interface WooCommerceRestApiQuery {\n    [key: string]: string;\n}\n\n/**\n * WooCommerce REST API wrapper\n */\nexport default class WooCommerceRestApi {\n    classVersion: string;\n    url: string;\n    consumerKey: string;\n    consumerSecret: string;\n    wpAPIPrefix: string;\n    version: WooCommerceRestApiVersion;\n    encoding: WooCommerceRestApiEncoding;\n    queryStringAuth: boolean;\n    port: number;\n    timeout: number;\n    axiosConfig: any;\n\n    /**\n     * Class constructor.\n     */\n    constructor(opt: WooCommerceRestApiOptions | WooCommerceRestApi);\n\n    /**\n     * Set default options\n     */\n    _setDefaultsOptions(opt: WooCommerceRestApiOptions): void;\n\n    /**\n     * Parse params object.\n     */\n    _parseParamsObject(params: any, query: any): WooCommerceRestApiQuery;\n\n    /**\n     * Normalize query string for oAuth\n     */\n    _normalizeQueryString(url: string, params: any): string;\n\n    /**\n     * Get URL\n     */\n    _getUrl(endpoint: string, params: any): string;\n\n    /**\n     * Get OAuth\n     */\n    _getOAuth(): any;\n\n    /**\n     * Do requests\n     */\n    _request(method: WooCommerceRestApiMethod, endpoint: string, data: any, params: any): Promise<any>;\n\n    /**\n     * GET requests\n     */\n    get(endpoint: string, params?: any): Promise<any>;\n\n    /**\n     * POST requests\n     */\n    post(endpoint: string, data: any, params?: any): Promise<any>;\n\n    /**\n     * PUT requests\n     */\n    put(endpoint: string, data: any, params?: any): Promise<any>;\n\n    /**\n     * DELETE requests\n     */\n    delete(endpoint: string, params?: any): Promise<any>;\n\n    /**\n     * OPTIONS requests\n     */\n    options(endpoint: string, params?: any): Promise<any>;\n}\n\n/**\n * Options Exception.\n */\nexport class OptionsException {\n    name: 'Options Error';\n    message: string;\n\n    /**\n     * Constructor.\n     */\n    constructor(message: string);\n}\n"
}
