{
  "master:types/node/index.d.ts": "// Type definitions for non-npm package Node.js 14.6\n// Project: http://nodejs.org/\n// Definitions by: Microsoft TypeScript <https://github.com/Microsoft>\n//                 DefinitelyTyped <https://github.com/DefinitelyTyped>\n//                 Alberto Schiabel <https://github.com/jkomyno>\n//                 Alexander T. <https://github.com/a-tarasyuk>\n//                 Alvis HT Tang <https://github.com/alvis>\n//                 Andrew Makarov <https://github.com/r3nya>\n//                 Benjamin Toueg <https://github.com/btoueg>\n//                 Bruno Scheufler <https://github.com/brunoscheufler>\n//                 Chigozirim C. <https://github.com/smac89>\n//                 David Junger <https://github.com/touffy>\n//                 Deividas Bakanas <https://github.com/DeividasBakanas>\n//                 Eugene Y. Q. Shen <https://github.com/eyqs>\n//                 Flarna <https://github.com/Flarna>\n//                 Hannes Magnusson <https://github.com/Hannes-Magnusson-CK>\n//                 Hoàng Văn Khải <https://github.com/KSXGitHub>\n//                 Huw <https://github.com/hoo29>\n//                 Kelvin Jin <https://github.com/kjin>\n//                 Klaus Meinhardt <https://github.com/ajafff>\n//                 Lishude <https://github.com/islishude>\n//                 Mariusz Wiktorczyk <https://github.com/mwiktorczyk>\n//                 Mohsen Azimi <https://github.com/mohsen1>\n//                 Nicolas Even <https://github.com/n-e>\n//                 Nikita Galkin <https://github.com/galkin>\n//                 Parambir Singh <https://github.com/parambirs>\n//                 Sebastian Silbermann <https://github.com/eps1lon>\n//                 Simon Schick <https://github.com/SimonSchick>\n//                 Thomas den Hollander <https://github.com/ThomasdenH>\n//                 Wilco Bakker <https://github.com/WilcoBakker>\n//                 wwwy3y3 <https://github.com/wwwy3y3>\n//                 Samuel Ainsworth <https://github.com/samuela>\n//                 Kyle Uehlein <https://github.com/kuehlein>\n//                 Jordi Oliveras Rovira <https://github.com/j-oliveras>\n//                 Thanik Bhongbhibhat <https://github.com/bhongy>\n//                 Marcin Kopacz <https://github.com/chyzwar>\n//                 Trivikram Kamat <https://github.com/trivikr>\n//                 Minh Son Nguyen <https://github.com/nguymin4>\n//                 Junxiao Shi <https://github.com/yoursunny>\n//                 Ilia Baryshnikov <https://github.com/qwelias>\n//                 ExE Boss <https://github.com/ExE-Boss>\n//                 Surasak Chaisurin <https://github.com/Ryan-Willpower>\n//                 Piotr Błażejewicz <https://github.com/peterblazejewicz>\n//                 Anna Henningsen <https://github.com/addaleax>\n//                 Jason Kwok <https://github.com/JasonHK>\n// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped\n\n// NOTE: These definitions support NodeJS and TypeScript 3.5.\n\n// NOTE: TypeScript version-specific augmentations can be found in the following paths:\n//          - ~/base.d.ts         - Shared definitions common to all TypeScript versions\n//          - ~/index.d.ts        - Definitions specific to TypeScript 2.8\n//          - ~/ts3.5/index.d.ts  - Definitions specific to TypeScript 3.5\n\n// NOTE: Augmentations for TypeScript 3.5 and later should use individual files for overrides\n//       within the respective ~/ts3.5 (or later) folder. However, this is disallowed for versions\n//       prior to TypeScript 3.5, so the older definitions will be found here.\n\n// Base definitions for all NodeJS modules that are not specific to any version of TypeScript:\n/// <reference path=\"base.d.ts\" />\n\n// We can't include globals.global.d.ts in globals.d.ts, as it'll cause duplication errors in TypeScript 3.5+\n/// <reference path=\"globals.global.d.ts\" />\n\n// We can't include assert.d.ts in base.d.ts, as it'll cause duplication errors in TypeScript 3.7+\n/// <reference path=\"assert.d.ts\" />\n\n// Forward-declarations for needed types from es2015 and later (in case users are using `--lib es5`)\n// Empty interfaces are used here which merge fine with the real declarations in the lib XXX files\n// just to ensure the names are known and node typings can be used without importing these libs.\n// if someone really needs these types the libs need to be added via --lib or in tsconfig.json\ninterface AsyncIterable<T> { }\ninterface IterableIterator<T> { }\ninterface AsyncIterableIterator<T> {}\ninterface SymbolConstructor {\n    readonly asyncIterator: symbol;\n}\ndeclare var Symbol: SymbolConstructor;\n// even this is just a forward declaration some properties are added otherwise\n// it would be allowed to pass anything to e.g. Buffer.from()\ninterface SharedArrayBuffer {\n    readonly byteLength: number;\n    slice(begin?: number, end?: number): SharedArrayBuffer;\n}\n\ndeclare module \"util\" {\n    namespace types {\n        function isBigInt64Array(value: any): boolean;\n        function isBigUint64Array(value: any): boolean;\n    }\n}\n",
  "4aff18f9b99fdfc26209485631ba429f5d3d29ba:types/node/index.d.ts": "// Type definitions for non-npm package Node.js 14.6\n// Project: http://nodejs.org/\n// Definitions by: Microsoft TypeScript <https://github.com/Microsoft>\n//                 DefinitelyTyped <https://github.com/DefinitelyTyped>\n//                 Alberto Schiabel <https://github.com/jkomyno>\n//                 Alexander T. <https://github.com/a-tarasyuk>\n//                 Alvis HT Tang <https://github.com/alvis>\n//                 Andrew Makarov <https://github.com/r3nya>\n//                 Benjamin Toueg <https://github.com/btoueg>\n//                 Bruno Scheufler <https://github.com/brunoscheufler>\n//                 Chigozirim C. <https://github.com/smac89>\n//                 David Junger <https://github.com/touffy>\n//                 Deividas Bakanas <https://github.com/DeividasBakanas>\n//                 Eugene Y. Q. Shen <https://github.com/eyqs>\n//                 Flarna <https://github.com/Flarna>\n//                 Hannes Magnusson <https://github.com/Hannes-Magnusson-CK>\n//                 Hoàng Văn Khải <https://github.com/KSXGitHub>\n//                 Huw <https://github.com/hoo29>\n//                 Kelvin Jin <https://github.com/kjin>\n//                 Klaus Meinhardt <https://github.com/ajafff>\n//                 Lishude <https://github.com/islishude>\n//                 Mariusz Wiktorczyk <https://github.com/mwiktorczyk>\n//                 Mohsen Azimi <https://github.com/mohsen1>\n//                 Nicolas Even <https://github.com/n-e>\n//                 Nikita Galkin <https://github.com/galkin>\n//                 Parambir Singh <https://github.com/parambirs>\n//                 Sebastian Silbermann <https://github.com/eps1lon>\n//                 Simon Schick <https://github.com/SimonSchick>\n//                 Thomas den Hollander <https://github.com/ThomasdenH>\n//                 Wilco Bakker <https://github.com/WilcoBakker>\n//                 wwwy3y3 <https://github.com/wwwy3y3>\n//                 Samuel Ainsworth <https://github.com/samuela>\n//                 Kyle Uehlein <https://github.com/kuehlein>\n//                 Jordi Oliveras Rovira <https://github.com/j-oliveras>\n//                 Thanik Bhongbhibhat <https://github.com/bhongy>\n//                 Marcin Kopacz <https://github.com/chyzwar>\n//                 Trivikram Kamat <https://github.com/trivikr>\n//                 Minh Son Nguyen <https://github.com/nguymin4>\n//                 Junxiao Shi <https://github.com/yoursunny>\n//                 Ilia Baryshnikov <https://github.com/qwelias>\n//                 ExE Boss <https://github.com/ExE-Boss>\n//                 Surasak Chaisurin <https://github.com/Ryan-Willpower>\n//                 Piotr Błażejewicz <https://github.com/peterblazejewicz>\n//                 Anna Henningsen <https://github.com/addaleax>\n//                 Jason Kwok <https://github.com/JasonHK>\n// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped\n\n// NOTE: These definitions support NodeJS and TypeScript 3.5.\n\n// NOTE: TypeScript version-specific augmentations can be found in the following paths:\n//          - ~/base.d.ts         - Shared definitions common to all TypeScript versions\n//          - ~/index.d.ts        - Definitions specific to TypeScript 2.8\n//          - ~/ts3.5/index.d.ts  - Definitions specific to TypeScript 3.5\n\n// NOTE: Augmentations for TypeScript 3.5 and later should use individual files for overrides\n//       within the respective ~/ts3.5 (or later) folder. However, this is disallowed for versions\n//       prior to TypeScript 3.5, so the older definitions will be found here.\n\n// Base definitions for all NodeJS modules that are not specific to any version of TypeScript:\n/// <reference path=\"base.d.ts\" />\n\n// We can't include globals.global.d.ts in globals.d.ts, as it'll cause duplication errors in TypeScript 3.5+\n/// <reference path=\"globals.global.d.ts\" />\n\n// We can't include assert.d.ts in base.d.ts, as it'll cause duplication errors in TypeScript 3.7+\n/// <reference path=\"assert.d.ts\" />\n\n// Forward-declarations for needed types from es2015 and later (in case users are using `--lib es5`)\n// Empty interfaces are used here which merge fine with the real declarations in the lib XXX files\n// just to ensure the names are known and node typings can be used without importing these libs.\n// if someone really needs these types the libs need to be added via --lib or in tsconfig.json\ninterface AsyncIterable<T> { }\ninterface IterableIterator<T> { }\ninterface AsyncIterableIterator<T> {}\ninterface SymbolConstructor {\n    readonly asyncIterator: symbol;\n}\ndeclare var Symbol: SymbolConstructor;\n// even this is just a forward declaration some properties are added otherwise\n// it would be allowed to pass anything to e.g. Buffer.from()\ninterface SharedArrayBuffer {\n    readonly byteLength: number;\n    slice(begin?: number, end?: number): SharedArrayBuffer;\n}\n\ndeclare module \"util\" {\n    namespace types {\n        function isBigInt64Array(value: any): boolean;\n        function isBigUint64Array(value: any): boolean;\n    }\n}\n"
}
