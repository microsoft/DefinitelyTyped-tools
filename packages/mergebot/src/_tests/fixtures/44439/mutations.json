[
  {
    "mutation": "mutation ($input: UpdateIssueCommentInput!) {\n  updateIssueComment(input: $input) {\n    __typename\n  }\n}\n",
    "variables": {
      "input": {
        "id": "MDEyOklzc3VlQ29tbWVudDYyMjk1NjU0Mg==",
        "body": "@ivandevp Thank you for submitting this PR! I see this is your first time submitting to DefinitelyTyped üëã ‚Äî I'm the local bot who will help you through the process of getting things through.\n\n***This is a live comment that I will keep updated.***\n\nThis PR touches some part of DefinitelyTyped infrastructure, so a DT maintainer will need to review it. This is rare ‚Äî did you mean to do this?\n\n## 1 package in this PR (and infra files)\n\n* `detect-port` ‚Äî [on npm](https://www.npmjs.com/package/detect-port), [on unpkg](https://unpkg.com/browse/detect-port@latest/)\n  - 1 added owner: ‚úé@ivandevp\n* Infra files\n  - [`types/detect-port-1.1.4.tgz`](https://github.com/DefinitelyTyped/DefinitelyTyped/pull/44439/files/f8b161266a38186c3d7ab715ea63f68d5ef542ed#diff-d927308abcdc03d8d50cb2414a113220f4d7b8c6733a1b0c12ea6ac94809d97a)\n\n## Code Reviews\n\nThis PR can be merged once it's reviewed by a DT maintainer.\n\nYou can test the changes of this PR [in the Playground](https://www.typescriptlang.org/play/?dtPR=44439&install-plugin=playground-dt-review).\n\n## Status\n\n * ‚úÖ No merge conflicts\n * ‚úÖ Continuous integration tests have passed\n * üïê A DT maintainer needs to approve changes that affect DT infrastructure ([`types/detect-port-1.1.4.tgz`](https://github.com/DefinitelyTyped/DefinitelyTyped/pull/44439/files/f8b161266a38186c3d7ab715ea63f68d5ef542ed#diff-d927308abcdc03d8d50cb2414a113220f4d7b8c6733a1b0c12ea6ac94809d97a))\n\nOnce every item on this list is checked, I'll ask you for permission to merge and publish the changes.\n\n----------------------\n... diagnostics scrubbed ...\n<!--typescript_bot_welcome-->"
      }
    }
  },
  {
    "mutation": "mutation ($input: AddLabelsToLabelableInput!) {\n  addLabelsToLabelable(input: $input) {\n    __typename\n  }\n}\n",
    "variables": {
      "input": {
        "labelIds": [
          "MDU6TGFiZWwyNDk1OTc2ODI5"
        ],
        "labelableId": "MDExOlB1bGxSZXF1ZXN0NDEyNDU0MjUw"
      }
    }
  },
  {
    "mutation": "mutation ($input: MoveProjectCardInput!) {\n  moveProjectCard(input: $input) {\n    __typename\n  }\n}\n",
    "variables": {
      "input": {
        "cardId": "MDExOlByb2plY3RDYXJkMzc0MjY3NjE=",
        "columnId": "MDEzOlByb2plY3RDb2x1bW45ODY3MDA2"
      }
    }
  }
]
