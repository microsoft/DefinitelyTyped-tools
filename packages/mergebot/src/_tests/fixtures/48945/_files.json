{
  "master:types/gapi.client.calendar/index.d.ts": "// Type definitions for non-npm package Calendar API v3 3.0\n// Project: https://developers.google.com/google-apps/calendar/firstapp\n// Definitions by: Maxim Mazurok <https://github.com/Maxim-Mazurok>\n//                 Google API Typings Generator <https://github.com/google-api-typings-generator>\n//                 Nick Amoscato <https://github.com/namoscato>\n//                 Declan Vong <https://github.com/declanvong>\n// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped\n// TypeScript Version: 2.8\n\n// IMPORTANT\n// This file was generated by https://github.com/Maxim-Mazurok/google-api-typings-generator. Please do not edit it manually.\n// In case of any problems please post issue to https://github.com/Maxim-Mazurok/google-api-typings-generator\n// Generated from: https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest\n// Revision: 20200917\n\n/// <reference types=\"gapi.client\" />\n\ndeclare namespace gapi.client {\n    /** Load Calendar API v3 */\n    function load(name: \"calendar\", version: \"v3\"): PromiseLike<void>;\n    function load(name: \"calendar\", version: \"v3\", callback: () => any): void;\n\n    namespace calendar {\n        interface Acl {\n            /** ETag of the collection. */\n            etag?: string;\n            /** List of rules on the access control list. */\n            items?: AclRule[];\n            /** Type of the collection (\"calendar#acl\"). */\n            kind?: string;\n            /** Token used to access the next page of this result. Omitted if no further results are available, in which case nextSyncToken is provided. */\n            nextPageToken?: string;\n            /**\n             * Token used at a later point in time to retrieve only the entries that have changed since this result was returned. Omitted if further results are available, in which case\n             * nextPageToken is provided.\n             */\n            nextSyncToken?: string;\n        }\n        interface AclRule {\n            /** ETag of the resource. */\n            etag?: string;\n            /** Identifier of the ACL rule. */\n            id?: string;\n            /** Type of the resource (\"calendar#aclRule\"). */\n            kind?: string;\n            /**\n             * The role assigned to the scope. Possible values are:\n             * - \"none\" - Provides no access.\n             * - \"freeBusyReader\" - Provides read access to free/busy information.\n             * - \"reader\" - Provides read access to the calendar. Private events will appear to users with reader access, but event details will be hidden.\n             * - \"writer\" - Provides read and write access to the calendar. Private events will appear to users with writer access, and event details will be visible.\n             * - \"owner\" - Provides ownership of the calendar. This role has all of the permissions of the writer role with the additional ability to see and manipulate ACLs.\n             */\n            role?: string;\n            /** The scope of the rule. */\n            scope?: {\n                /**\n                 * The type of the scope. Possible values are:\n                 * - \"default\" - The public scope. This is the default value.\n                 * - \"user\" - Limits the scope to a single user.\n                 * - \"group\" - Limits the scope to a group.\n                 * - \"domain\" - Limits the scope to a domain.  Note: The permissions granted to the \"default\", or public, scope apply to any user, authenticated or not.\n                 */\n                type?: string;\n                /** The email address of a user or group, or the name of a domain, depending on the scope type. Omitted for type \"default\". */\n                value?: string;\n            };\n        }\n        interface Calendar {\n            /** Conferencing properties for this calendar, for example what types of conferences are allowed. */\n            conferenceProperties?: ConferenceProperties;\n            /** Description of the calendar. Optional. */\n            description?: string;\n            /** ETag of the resource. */\n            etag?: string;\n            /** Identifier of the calendar. To retrieve IDs call the calendarList.list() method. */\n            id?: string;\n            /** Type of the resource (\"calendar#calendar\"). */\n            kind?: string;\n            /** Geographic location of the calendar as free-form text. Optional. */\n            location?: string;\n            /** Title of the calendar. */\n            summary?: string;\n            /** The time zone of the calendar. (Formatted as an IANA Time Zone Database name, e.g. \"Europe/Zurich\".) Optional. */\n            timeZone?: string;\n        }\n        interface CalendarList {\n            /** ETag of the collection. */\n            etag?: string;\n            /** Calendars that are present on the user's calendar list. */\n            items?: CalendarListEntry[];\n            /** Type of the collection (\"calendar#calendarList\"). */\n            kind?: string;\n            /** Token used to access the next page of this result. Omitted if no further results are available, in which case nextSyncToken is provided. */\n            nextPageToken?: string;\n            /**\n             * Token used at a later point in time to retrieve only the entries that have changed since this result was returned. Omitted if further results are available, in which case\n             * nextPageToken is provided.\n             */\n            nextSyncToken?: string;\n        }\n        interface CalendarListEntry {\n            /**\n             * The effective access role that the authenticated user has on the calendar. Read-only. Possible values are:\n             * - \"freeBusyReader\" - Provides read access to free/busy information.\n             * - \"reader\" - Provides read access to the calendar. Private events will appear to users with reader access, but event details will be hidden.\n             * - \"writer\" - Provides read and write access to the calendar. Private events will appear to users with writer access, and event details will be visible.\n             * - \"owner\" - Provides ownership of the calendar. This role has all of the permissions of the writer role with the additional ability to see and manipulate ACLs.\n             */\n            accessRole?: string;\n            /**\n             * The main color of the calendar in the hexadecimal format \"#0088aa\". This property supersedes the index-based colorId property. To set or change this property, you need to specify\n             * colorRgbFormat=true in the parameters of the insert, update and patch methods. Optional.\n             */\n            backgroundColor?: string;\n            /**\n             * The color of the calendar. This is an ID referring to an entry in the calendar section of the colors definition (see the colors endpoint). This property is superseded by the\n             * backgroundColor and foregroundColor properties and can be ignored when using these properties. Optional.\n             */\n            colorId?: string;\n            /** Conferencing properties for this calendar, for example what types of conferences are allowed. */\n            conferenceProperties?: ConferenceProperties;\n            /** The default reminders that the authenticated user has for this calendar. */\n            defaultReminders?: EventReminder[];\n            /** Whether this calendar list entry has been deleted from the calendar list. Read-only. Optional. The default is False. */\n            deleted?: boolean;\n            /** Description of the calendar. Optional. Read-only. */\n            description?: string;\n            /** ETag of the resource. */\n            etag?: string;\n            /**\n             * The foreground color of the calendar in the hexadecimal format \"#ffffff\". This property supersedes the index-based colorId property. To set or change this property, you need to\n             * specify colorRgbFormat=true in the parameters of the insert, update and patch methods. Optional.\n             */\n            foregroundColor?: string;\n            /** Whether the calendar has been hidden from the list. Optional. The attribute is only returned when the calendar is hidden, in which case the value is true. */\n            hidden?: boolean;\n            /** Identifier of the calendar. */\n            id?: string;\n            /** Type of the resource (\"calendar#calendarListEntry\"). */\n            kind?: string;\n            /** Geographic location of the calendar as free-form text. Optional. Read-only. */\n            location?: string;\n            /** The notifications that the authenticated user is receiving for this calendar. */\n            notificationSettings?: {\n                /** The list of notifications set for this calendar. */\n                notifications?: CalendarNotification[];\n            };\n            /** Whether the calendar is the primary calendar of the authenticated user. Read-only. Optional. The default is False. */\n            primary?: boolean;\n            /** Whether the calendar content shows up in the calendar UI. Optional. The default is False. */\n            selected?: boolean;\n            /** Title of the calendar. Read-only. */\n            summary?: string;\n            /** The summary that the authenticated user has set for this calendar. Optional. */\n            summaryOverride?: string;\n            /** The time zone of the calendar. Optional. Read-only. */\n            timeZone?: string;\n        }\n        interface CalendarNotification {\n            /**\n             * The method used to deliver the notification. The possible value is:\n             * - \"email\" - Notifications are sent via email.\n             * Required when adding a notification.\n             */\n            method?: string;\n            /**\n             * The type of notification. Possible values are:\n             * - \"eventCreation\" - Notification sent when a new event is put on the calendar.\n             * - \"eventChange\" - Notification sent when an event is changed.\n             * - \"eventCancellation\" - Notification sent when an event is cancelled.\n             * - \"eventResponse\" - Notification sent when an attendee responds to the event invitation.\n             * - \"agenda\" - An agenda with the events of the day (sent out i",
  "759b4cb2339ff12a22c8101f143a7a68ed535c70:types/gapi.client.calendar/index.d.ts": "// Type definitions for non-npm package Calendar API v3 3.0\n// Project: https://developers.google.com/google-apps/calendar/firstapp\n// Definitions by: Maxim Mazurok <https://github.com/Maxim-Mazurok>\n//                 Google API Typings Generator <https://github.com/google-api-typings-generator>\n//                 Nick Amoscato <https://github.com/namoscato>\n//                 Declan Vong <https://github.com/declanvong>\n// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped\n// TypeScript Version: 2.8\n\n// IMPORTANT\n// This file was generated by https://github.com/Maxim-Mazurok/google-api-typings-generator. Please do not edit it manually.\n// In case of any problems please post issue to https://github.com/Maxim-Mazurok/google-api-typings-generator\n// Generated from: https://calendar-json.googleapis.com/$discovery/rest?version=v3\n// Revision: 20201015\n\n/// <reference types=\"gapi.client\" />\n\ndeclare namespace gapi.client {\n    /** Load Calendar API v3 */\n    function load(name: \"calendar\", version: \"v3\"): PromiseLike<void>;\n    function load(name: \"calendar\", version: \"v3\", callback: () => any): void;\n\n    namespace calendar {\n        interface Acl {\n            /** ETag of the collection. */\n            etag?: string;\n            /** List of rules on the access control list. */\n            items?: AclRule[];\n            /** Type of the collection (\"calendar#acl\"). */\n            kind?: string;\n            /** Token used to access the next page of this result. Omitted if no further results are available, in which case nextSyncToken is provided. */\n            nextPageToken?: string;\n            /**\n             * Token used at a later point in time to retrieve only the entries that have changed since this result was returned. Omitted if further results are available, in which case\n             * nextPageToken is provided.\n             */\n            nextSyncToken?: string;\n        }\n        interface AclRule {\n            /** ETag of the resource. */\n            etag?: string;\n            /** Identifier of the ACL rule. */\n            id?: string;\n            /** Type of the resource (\"calendar#aclRule\"). */\n            kind?: string;\n            /**\n             * The role assigned to the scope. Possible values are:\n             * - \"none\" - Provides no access.\n             * - \"freeBusyReader\" - Provides read access to free/busy information.\n             * - \"reader\" - Provides read access to the calendar. Private events will appear to users with reader access, but event details will be hidden.\n             * - \"writer\" - Provides read and write access to the calendar. Private events will appear to users with writer access, and event details will be visible.\n             * - \"owner\" - Provides ownership of the calendar. This role has all of the permissions of the writer role with the additional ability to see and manipulate ACLs.\n             */\n            role?: string;\n            /** The scope of the rule. */\n            scope?: {\n                /**\n                 * The type of the scope. Possible values are:\n                 * - \"default\" - The public scope. This is the default value.\n                 * - \"user\" - Limits the scope to a single user.\n                 * - \"group\" - Limits the scope to a group.\n                 * - \"domain\" - Limits the scope to a domain.  Note: The permissions granted to the \"default\", or public, scope apply to any user, authenticated or not.\n                 */\n                type?: string;\n                /** The email address of a user or group, or the name of a domain, depending on the scope type. Omitted for type \"default\". */\n                value?: string;\n            };\n        }\n        interface Calendar {\n            /** Conferencing properties for this calendar, for example what types of conferences are allowed. */\n            conferenceProperties?: ConferenceProperties;\n            /** Description of the calendar. Optional. */\n            description?: string;\n            /** ETag of the resource. */\n            etag?: string;\n            /** Identifier of the calendar. To retrieve IDs call the calendarList.list() method. */\n            id?: string;\n            /** Type of the resource (\"calendar#calendar\"). */\n            kind?: string;\n            /** Geographic location of the calendar as free-form text. Optional. */\n            location?: string;\n            /** Title of the calendar. */\n            summary?: string;\n            /** The time zone of the calendar. (Formatted as an IANA Time Zone Database name, e.g. \"Europe/Zurich\".) Optional. */\n            timeZone?: string;\n        }\n        interface CalendarList {\n            /** ETag of the collection. */\n            etag?: string;\n            /** Calendars that are present on the user's calendar list. */\n            items?: CalendarListEntry[];\n            /** Type of the collection (\"calendar#calendarList\"). */\n            kind?: string;\n            /** Token used to access the next page of this result. Omitted if no further results are available, in which case nextSyncToken is provided. */\n            nextPageToken?: string;\n            /**\n             * Token used at a later point in time to retrieve only the entries that have changed since this result was returned. Omitted if further results are available, in which case\n             * nextPageToken is provided.\n             */\n            nextSyncToken?: string;\n        }\n        interface CalendarListEntry {\n            /**\n             * The effective access role that the authenticated user has on the calendar. Read-only. Possible values are:\n             * - \"freeBusyReader\" - Provides read access to free/busy information.\n             * - \"reader\" - Provides read access to the calendar. Private events will appear to users with reader access, but event details will be hidden.\n             * - \"writer\" - Provides read and write access to the calendar. Private events will appear to users with writer access, and event details will be visible.\n             * - \"owner\" - Provides ownership of the calendar. This role has all of the permissions of the writer role with the additional ability to see and manipulate ACLs.\n             */\n            accessRole?: string;\n            /**\n             * The main color of the calendar in the hexadecimal format \"#0088aa\". This property supersedes the index-based colorId property. To set or change this property, you need to specify\n             * colorRgbFormat=true in the parameters of the insert, update and patch methods. Optional.\n             */\n            backgroundColor?: string;\n            /**\n             * The color of the calendar. This is an ID referring to an entry in the calendar section of the colors definition (see the colors endpoint). This property is superseded by the\n             * backgroundColor and foregroundColor properties and can be ignored when using these properties. Optional.\n             */\n            colorId?: string;\n            /** Conferencing properties for this calendar, for example what types of conferences are allowed. */\n            conferenceProperties?: ConferenceProperties;\n            /** The default reminders that the authenticated user has for this calendar. */\n            defaultReminders?: EventReminder[];\n            /** Whether this calendar list entry has been deleted from the calendar list. Read-only. Optional. The default is False. */\n            deleted?: boolean;\n            /** Description of the calendar. Optional. Read-only. */\n            description?: string;\n            /** ETag of the resource. */\n            etag?: string;\n            /**\n             * The foreground color of the calendar in the hexadecimal format \"#ffffff\". This property supersedes the index-based colorId property. To set or change this property, you need to\n             * specify colorRgbFormat=true in the parameters of the insert, update and patch methods. Optional.\n             */\n            foregroundColor?: string;\n            /** Whether the calendar has been hidden from the list. Optional. The attribute is only returned when the calendar is hidden, in which case the value is true. */\n            hidden?: boolean;\n            /** Identifier of the calendar. */\n            id?: string;\n            /** Type of the resource (\"calendar#calendarListEntry\"). */\n            kind?: string;\n            /** Geographic location of the calendar as free-form text. Optional. Read-only. */\n            location?: string;\n            /** The notifications that the authenticated user is receiving for this calendar. */\n            notificationSettings?: {\n                /** The list of notifications set for this calendar. */\n                notifications?: CalendarNotification[];\n            };\n            /** Whether the calendar is the primary calendar of the authenticated user. Read-only. Optional. The default is False. */\n            primary?: boolean;\n            /** Whether the calendar content shows up in the calendar UI. Optional. The default is False. */\n            selected?: boolean;\n            /** Title of the calendar. Read-only. */\n            summary?: string;\n            /** The summary that the authenticated user has set for this calendar. Optional. */\n            summaryOverride?: string;\n            /** The time zone of the calendar. Optional. Read-only. */\n            timeZone?: string;\n        }\n        interface CalendarNotification {\n            /**\n             * The method used to deliver the notification. The possible value is:\n             * - \"email\" - Notifications are sent via email.\n             * Required when adding a notification.\n             */\n            method?: string;\n            /**\n             * The type of notification. Possible values are:\n             * - \"eventCreation\" - Notification sent when a new event is put on the calendar.\n             * - \"eventChange\" - Notification sent when an event is changed.\n             * - \"eventCancellation\" - Notification sent when an event is cancelled.\n             * - \"eventResponse\" - Notification sent when an attendee responds to the event invitation.\n             * - \"agenda\" - An agenda with the events of the day (sent out"
}
