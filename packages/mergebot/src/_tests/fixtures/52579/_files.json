{
  "5337ea17b2407707bead503cd20c9ca29438f5df:types/vertx__eventbus-bridge-client.js/tsconfig.json": "{\n    \"compilerOptions\": {\n        \"module\": \"commonjs\",\n        \"lib\": [\n            \"es6\"\n        ],\n        \"noImplicitAny\": true,\n        \"noImplicitThis\": true,\n        \"strictFunctionTypes\": true,\n        \"strictNullChecks\": true,\n        \"baseUrl\": \"../\",\n        \"typeRoots\": [\n            \"../\"\n        ],\n        \"types\": [],\n        \"noEmit\": true,\n        \"forceConsistentCasingInFileNames\": true\n    },\n    \"files\": [\n        \"index.d.ts\",\n        \"vertx__eventbus-bridge-client.js-tests.ts\"\n    ]\n}\n",
  "5337ea17b2407707bead503cd20c9ca29438f5df:types/vertx__eventbus-bridge-client.js/tslint.json": "{ \"extends\": \"@definitelytyped/dtslint/dt.json\" }\n",
  "5337ea17b2407707bead503cd20c9ca29438f5df:types/vertx__eventbus-bridge-client.js/index.d.ts": "// Type definitions for @vertx/eventbus-bridge-client.js 1.0\n// Project: http://vertx.io\n// Definitions by: Chiramet Phong Penglerd <https://github.com/Phong6698>\n// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped\n\ndeclare namespace EventBus {\n    type EventBusStatic = new(url: string, options?: any) => EventBus;\n\n    interface EventBus {\n        url: string;\n        options?: EventBusOptions;\n        onopen(): void;\n        onerror(error: EventBusError): void;\n        onclose(): void;\n        registerHandler(address: string, headers?: object, callback?: (error: Error, message: any) => void): void;\n        unregisterHandler(address: string, headers?: object, callback?: (error: Error, message: any) => void): void;\n        send(address: string, message: any, headers?: object, callback?: (error: Error, message: any) => void): void;\n        publish(address: string, message: any, headers?: any): void;\n        enableReconnect(enable: boolean): void;\n        enablePing(enable: boolean): void;\n        close(): void;\n    }\n\n    interface EventBusOptions {\n        vertxbus_reconnect_attempts_max: number; // Max reconnect attempts\n        vertxbus_reconnect_delay_min: number; // Initial delay (in ms) before first reconnect attempt\n        vertxbus_reconnect_delay_max: number; // Max delay (in ms) between reconnect attempts\n        vertxbus_reconnect_exponent: number; // Exponential backoff factor\n        vertxbus_randomization_factor: number; // Randomization factor between 0 and 1\n    }\n\n    interface EventBusError {\n        body: string;\n        type: string;\n    }\n}\n\ndeclare var EventBus: EventBus.EventBusStatic;\nexport = EventBus;\n"
}
