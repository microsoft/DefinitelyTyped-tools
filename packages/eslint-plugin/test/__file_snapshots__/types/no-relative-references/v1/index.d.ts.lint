types/no-relative-references/v1/index.d.ts
   1:22  error  The reference "../../foo/index.d.ts" resolves outside of the package. Use a global reference to reference other packages      @definitelytyped/no-bad-reference
   2:22  error  The reference "../v1/index.d.ts" resolves to the current package, but uses relative paths                                     @definitelytyped/no-bad-reference
   3:22  error  The reference "../../foo/v1/index.d.ts" resolves outside of the package. Use a global reference to reference other packages   @definitelytyped/no-bad-reference
   4:22  error  The reference "../index.d.ts" resolves outside of the package. Use a global reference to reference other packages             @definitelytyped/no-bad-reference
   6:22  error  The import "../../foo" resolves outside of the package. Use a bare import to reference other packages                         @definitelytyped/no-bad-reference
   7:23  error  The import "../v1" resolves to the current package, but uses relative paths                                                   @definitelytyped/no-bad-reference
   8:23  error  The import "../../foo/v1" resolves outside of the package. Use a bare import to reference other packages                      @definitelytyped/no-bad-reference
   9:22  error  The import "../index" resolves outside of the package. Use a bare import to reference other packages                          @definitelytyped/no-bad-reference
  11:16  error  Instead of declaring a module with `declare module "no-relative-references"`, write its contents in directly in "index.d.ts"  @definitelytyped/no-declare-current-package
  12:3   error  Declaration file should not use a global import of itself. Use a relative import                                              @definitelytyped/no-self-import
  13:3   error  Declaration file should not use a global import of itself. Use a relative import                                              @definitelytyped/no-self-import
  14:22  error  The import "../index" resolves outside of the package. Use a bare import to reference other packages                          @definitelytyped/no-bad-reference

âœ– 12 problems (12 errors, 0 warnings)

==== types/no-relative-references/v1/index.d.ts ====

    /// <reference path="../../foo/index.d.ts" />
                         ~~~~~~~~~~~~~~~~~~~~
!!! @definitelytyped/no-bad-reference: The reference "../../foo/index.d.ts" resolves outside of the package. Use a global reference to reference other packages.
    /// <reference path="../v1/index.d.ts" />
                         ~~~~~~~~~~~~~~~~
!!! @definitelytyped/no-bad-reference: The reference "../v1/index.d.ts" resolves to the current package, but uses relative paths.
    /// <reference path="../../foo/v1/index.d.ts" />
                         ~~~~~~~~~~~~~~~~~~~~~~~
!!! @definitelytyped/no-bad-reference: The reference "../../foo/v1/index.d.ts" resolves outside of the package. Use a global reference to reference other packages.
    /// <reference path="../index.d.ts" />
                         ~~~~~~~~~~~~~
!!! @definitelytyped/no-bad-reference: The reference "../index.d.ts" resolves outside of the package. Use a global reference to reference other packages.
    
    import * as foo from "../../foo";
                         ~~~~~~~~~~~
!!! @definitelytyped/no-bad-reference: The import "../../foo" resolves outside of the package. Use a bare import to reference other packages.
    import * as foo2 from "../v1";
                          ~~~~~~~
!!! @definitelytyped/no-bad-reference: The import "../v1" resolves to the current package, but uses relative paths.
    import * as foo3 from "../../foo/v1";
                          ~~~~~~~~~~~~~~
!!! @definitelytyped/no-bad-reference: The import "../../foo/v1" resolves outside of the package. Use a bare import to reference other packages.
    import * as va4 from "../index";
                         ~~~~~~~~~~
!!! @definitelytyped/no-bad-reference: The import "../index" resolves outside of the package. Use a bare import to reference other packages.
    
    declare module "no-relative-references" {
                   ~~~~~~~~~~~~~~~~~~~~~~~~
!!! @definitelytyped/no-declare-current-package: Instead of declaring a module with `declare module "no-relative-references"`, write its contents in directly in "index.d.ts".
      import A = require("no-relative-references/blah"); // Okay; relative
      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!!! @definitelytyped/no-self-import: Declaration file should not use a global import of itself. Use a relative import.
      import B = require("no-relative-references/v1"); // Okay; no versioned dir here
      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!!! @definitelytyped/no-self-import: Declaration file should not use a global import of itself. Use a relative import.
      import C = require("../index"); // Bad; parent dir
                         ~~~~~~~~~~
!!! @definitelytyped/no-bad-reference: The import "../index" resolves outside of the package. Use a bare import to reference other packages.
    }
