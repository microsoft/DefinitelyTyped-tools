// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`plugin should have the expected exports 1`] = `
{
  "configs": {
    "all": {
      "overrides": [
        {
          "files": [
            "*.cts",
            "*.mts",
            "*.ts",
            "*.tsx",
          ],
          "parser": "@typescript-eslint/parser",
          "parserOptions": {
            "project": true,
            "warnOnUnsupportedTypeScriptVersion": false,
          },
          "rules": {
            "@definitelytyped/expect": "error",
            "@definitelytyped/export-just-namespace": "error",
            "@definitelytyped/no-any-union": "error",
            "@definitelytyped/no-bad-reference": "error",
            "@definitelytyped/no-const-enum": "error",
            "@definitelytyped/no-dead-reference": "error",
            "@definitelytyped/no-declare-current-package": "error",
            "@definitelytyped/no-import-default-of-export-equals": "error",
            "@definitelytyped/no-import-of-dev-dependencies": "error",
            "@definitelytyped/no-old-dt-header": "error",
            "@definitelytyped/no-relative-import-in-test": "error",
            "@definitelytyped/no-self-import": "error",
            "@definitelytyped/no-single-declare-module": "error",
            "@definitelytyped/no-single-element-tuple-type": "error",
            "@definitelytyped/no-type-only-packages": "error",
            "@definitelytyped/no-unnecessary-generics": "error",
            "@definitelytyped/no-useless-files": "error",
            "@definitelytyped/prefer-declare-function": "error",
            "@definitelytyped/redundant-undefined": "error",
            "@definitelytyped/strict-export-declare-modifiers": "error",
            "@typescript-eslint/adjacent-overload-signatures": "error",
            "@typescript-eslint/array-type": [
              "error",
              {
                "default": "array-simple",
              },
            ],
            "@typescript-eslint/ban-ts-comment": [
              "error",
              {
                "ts-check": false,
                "ts-expect-error": false,
                "ts-ignore": "allow-with-description",
                "ts-nocheck": true,
              },
            ],
            "@typescript-eslint/ban-types": [
              "error",
              {
                "extendDefaults": true,
                "types": {
                  "{}": false,
                },
              },
            ],
            "@typescript-eslint/consistent-type-definitions": "error",
            "@typescript-eslint/explicit-member-accessibility": [
              "error",
              {
                "accessibility": "no-public",
              },
            ],
            "@typescript-eslint/naming-convention": [
              "error",
              {
                "custom": {
                  "match": false,
                  "regex": "^I[A-Z]",
                },
                "format": [],
                "selector": "interface",
              },
            ],
            "@typescript-eslint/no-empty-interface": "error",
            "@typescript-eslint/no-invalid-void-type": [
              "error",
              {
                "allowAsThisParameter": true,
                "allowInGenericTypeArguments": true,
              },
            ],
            "@typescript-eslint/no-misused-new": "error",
            "@typescript-eslint/prefer-namespace-keyword": "error",
            "@typescript-eslint/triple-slash-reference": [
              "error",
              {
                "path": "always",
                "types": "prefer-import",
              },
            ],
            "no-duplicate-imports": "error",
            "unicode-bom": [
              "error",
              "never",
            ],
          },
        },
      ],
      "plugins": [
        "@definitelytyped",
        "@typescript-eslint",
        "jsdoc",
      ],
      "rules": {
        "jsdoc/check-tag-names": [
          "error",
          {
            "definedTags": [
              "addVersion",
              "also",
              "api",
              "author",
              "beta",
              "brief",
              "category",
              "cfg",
              "chainable",
              "check",
              "checkReturnValue",
              "classDescription",
              "condparamprivilege",
              "constraint",
              "credits",
              "declaration",
              "defApiFeature",
              "defaultValue",
              "detail",
              "end",
              "eventproperty",
              "experimental",
              "export",
              "expose",
              "extendscript",
              "factory",
              "field",
              "final",
              "fixme",
              "fluent",
              "for",
              "governance",
              "header",
              "hidden-property",
              "hidden",
              "id",
              "jsx",
              "jsxImportSource",
              "label",
              "language",
              "legacy",
              "link",
              "listen",
              "locus",
              "methodOf",
              "minVersion",
              "ngdoc",
              "nonstandard",
              "note",
              "npm",
              "observable",
              "option",
              "optionobject",
              "options",
              "packageDocumentation",
              "param",
              "parent",
              "platform",
              "plugin",
              "preserve",
              "privateRemarks",
              "privilegeLevel",
              "privilegeName",
              "proposed",
              "range",
              "readOnly",
              "related",
              "remark",
              "remarks",
              "required",
              "requires",
              "restriction",
              "returnType",
              "section",
              "see",
              "since",
              "const",
              "singleton",
              "source",
              "struct",
              "suppress",
              "targetfolder",
              "enum",
              "title",
              "record",
              "title",
              "TODO",
              "trigger",
              "triggers",
              "typeparam",
              "typeParam",
              "unsupported",
              "url",
              "usage",
              "warn",
              "warning",
              "version",
            ],
            "typed": true,
          },
        ],
      },
      "settings": {
        "jsdoc": {
          "tagNamePreference": {
            "argument": "argument",
            "exception": "exception",
            "function": "function",
            "method": "method",
            "param": "param",
            "return": "return",
            "returns": "returns",
          },
        },
      },
    },
  },
  "meta": {
    "name": "@definitelytyped/eslint-plugin",
    "version": "version",
  },
  "rules": [
    "export-just-namespace",
    "no-any-union",
    "no-bad-reference",
    "no-const-enum",
    "no-dead-reference",
    "no-declare-current-package",
    "no-import-default-of-export-equals",
    "no-relative-import-in-test",
    "no-self-import",
    "no-single-element-tuple-type",
    "no-unnecessary-generics",
    "no-useless-files",
    "prefer-declare-function",
    "redundant-undefined",
    "strict-export-declare-modifiers",
    "no-single-declare-module",
    "no-old-dt-header",
    "no-import-of-dev-dependencies",
    "npm-naming",
    "expect",
    "no-type-only-packages",
  ],
}
`;
