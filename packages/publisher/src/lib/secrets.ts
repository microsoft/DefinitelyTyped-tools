import { assertDefined, mapDefined } from "@definitelytyped/utils";

export enum Secret {
  /**
   * Lets the server update an issue (https://github.com/Microsoft/types-publisher/issues/40) on GitHub in case of an error.
   * Create a token at: https://github.com/settings/tokens
   */
  GITHUB_ACCESS_TOKEN,
  /**
   * Token used to perform request to NPM's API.
   * This was generated by doing:
   * - `npm login`
   * - copy the token value (comes after `authToken=`) in `~/.npmrc`
   * - `rm ~/.npmrc` (don't want to accidentally log out this token.)
   *
   * We only need one token in existence, so delete old tokens at: https://www.npmjs.com/settings/tokens
   */
  NPM_TYPES_TOKEN,
}

export const allSecrets: Secret[] = mapDefined(Object.keys(Secret), (key) => {
  const value = (Secret as unknown as { [key: string]: unknown })[key];
  return typeof value === "number" ? value : undefined; // tslint:disable-line strict-type-predicates (tslint bug)
});

export async function getSecret(secretId: Secret): Promise<string> {
  return assertDefined(process.env[Secret[secretId]], `Missing secret ${Secret[secretId]}`);
}
